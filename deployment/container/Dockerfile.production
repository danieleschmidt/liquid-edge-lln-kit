# Multi-stage production Dockerfile for Liquid Edge LLN
FROM python:3.11-slim-bullseye as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    make \
    cmake \
    git \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create application user
RUN groupadd -r liquiduser && useradd -r -g liquiduser liquiduser

# Set work directory
WORKDIR /app

# Install Python dependencies
COPY pyproject.toml pytest.ini ./
RUN pip install --no-cache-dir --upgrade pip setuptools wheel
RUN pip install --no-cache-dir .

# Production stage
FROM python:3.11-slim-bullseye as production

# Install only runtime dependencies
RUN apt-get update && apt-get install -y \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Create application user
RUN groupadd -r liquiduser && useradd -r -g liquiduser -m -s /bin/bash liquiduser

# Set up directories
WORKDIR /app
RUN chown -R liquiduser:liquiduser /app

# Copy Python packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY --chown=liquiduser:liquiduser src/ ./src/
COPY --chown=liquiduser:liquiduser examples/ ./examples/
COPY --chown=liquiduser:liquiduser scripts/ ./scripts/

# Copy configuration files
COPY --chown=liquiduser:liquiduser pyproject.toml ./
COPY --chown=liquiduser:liquiduser README.md ./

# Switch to non-root user
USER liquiduser

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD python -c "import sys; sys.path.append('/app'); from src.liquid_edge.core import LiquidNN; print('OK')" || exit 1

# Expose port
EXPOSE 8000

# Production command
CMD ["python", "-m", "src.liquid_edge.cli", "--mode", "production", "--port", "8000"]
