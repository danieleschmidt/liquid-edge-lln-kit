[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "liquid-edge-lln"
version = "0.1.0"
description = "Tiny liquid neural networks toolkit for sensor-rich edge robots"
authors = [{name = "Daniel Schmidt", email = "daniel@example.com"}]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Embedded Systems",
]
keywords = ["liquid neural networks", "edge ai", "robotics", "jax", "embedded"]

dependencies = [
    "jax>=0.4.28",
    "jaxlib>=0.4.28", 
    "flax>=0.8.0",
    "optax>=0.2.0",
    "numpy>=1.24.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.1.0",
    "black>=23.0.0",
    "mypy>=1.6.0",
    "pre-commit>=3.5.0",
]
deployment = [
    "tensorflow>=2.15.0",
    "onnx>=1.16.0",
    "torch>=2.3.0",
]
ros2 = [
    "opencv-python>=4.9.0",
]
all = [
    "liquid-edge-lln[dev,deployment,ros2]"
]

[project.urls]
Homepage = "https://github.com/liquid-edge/liquid-edge-lln-kit"
Documentation = "https://liquid-edge.readthedocs.io"
Repository = "https://github.com/liquid-edge/liquid-edge-lln-kit"
Issues = "https://github.com/liquid-edge/liquid-edge-lln-kit/issues"

[project.scripts]
liquid-lln = "liquid_edge.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-dir]
"" = "src"

[tool.ruff]
target-version = "py310"
line-length = 88
select = ["E", "F", "W", "C90", "I", "N", "UP", "B", "A", "C4", "SIM", "ARG", "PTH"]
ignore = ["E501", "B008", "B905"]

[tool.ruff.per-file-ignores]
"tests/*" = ["ARG", "S101"]
"examples/*" = ["T201"]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
strict_optional = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
addopts = "--cov=liquid_edge --cov-report=term-missing --cov-report=html --cov-report=xml"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "hardware: marks tests requiring physical hardware",
]

[tool.bandit]
exclude_dirs = ["tests", "examples"]
skips = ["B101", "B601"]