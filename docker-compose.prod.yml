version: '3.8'

services:
  # Production liquid-edge service
  liquid-edge:
    build:
      context: .
      dockerfile: Dockerfile
      target: runtime
    image: liquid-edge-lln:latest
    container_name: liquid-edge-prod
    restart: unless-stopped
    environment:
      - LIQUID_ENV=production
      - LOG_LEVEL=INFO
    volumes:
      - ./models:/home/appuser/models:ro
      - ./configs:/home/appuser/configs:ro
      - liquid-logs:/home/appuser/logs
    networks:
      - liquid-network
    healthcheck:
      test: ["CMD", "liquid-lln", "doctor"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    container_name: liquid-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - liquid-network

  grafana:
    image: grafana/grafana:latest
    container_name: liquid-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana-dashboard.json:/var/lib/grafana/dashboards/liquid-edge.json:ro
    networks:
      - liquid-network
    depends_on:
      - prometheus

  # Log aggregation
  loki:
    image: grafana/loki:latest
    container_name: liquid-loki
    restart: unless-stopped
    ports:
      - "3100:3100"
    volumes:
      - loki-data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - liquid-network

  # Reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: liquid-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    networks:
      - liquid-network
    depends_on:
      - liquid-edge
      - grafana

volumes:
  liquid-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  loki-data:
    driver: local
  nginx-logs:
    driver: local

networks:
  liquid-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16